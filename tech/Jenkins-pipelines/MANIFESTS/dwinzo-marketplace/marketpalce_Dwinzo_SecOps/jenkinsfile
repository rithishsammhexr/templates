pipeline {
    agent {
        label 'remote-server-agent'
    }

    triggers {
        GenericTrigger(
            genericVariables: [
                [key: 'ref', value: '$.ref'],
                [key: 'commit', value: '$.after'],
                [key: 'author', value: '$.commits[0].author.name']
            ],
            causeString: 'Triggered by commit on $ref by $author',
            token: 'marketplace-backend-webhook',
            printContributedVariables: true,
            printPostContent: true,
            regexpFilterText: '$ref',
            regexpFilterExpression: '^refs/heads/sub_branch_Nivetha$'
        )
    }

    environment {
        GIT_CREDENTIALS     = credentials('rithishsamm')
        DOCKER_COMPOSE      = 'docker-compose'
        APP_NAME            = 'Sabarinathan/marketplace_Dwnizo_backend'
        SONAR_HOST_URL      = 'http://185.100.212.76:12345'
        SONAR_TOKEN         = 'sqp_cc103cf68c3551314d644ab5372568e12a9b0c97' // Hardcoded Sonar token
        SMTP_CREDENTIALS    = credentials('smtp-credentials-gmail')

        // Report paths
        TRIVY_REPORT_DIR    = 'trivy-reports'
        GITLEAKS_REPORT_DIR = 'gitleaks-reports'
        SCA_REPORT_DIR      = 'sca-report'
    }

    stages {
        stage('Source') {
            steps {
                cleanWs(deleteDirs: true, disableDeferredWipeout: true)
                script {
                    powershell '''
                        Write-Host "Starting source checkout..."
                    '''

                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/sub_branch_Nivetha']],
                        userRemoteConfigs: [[
                            url: 'http://185.100.212.76:7776/Sabarinathan/marketplace_Dwnizo_backend.git',
                            credentialsId: env.GIT_CREDENTIALS
                        ]]
                    ])

                    powershell '''
                        Write-Host "Source checkout completed successfully"
                        dir
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    powershell '''
                        Write-Host "Building Docker images..."
                        docker-compose build --no-cache
                        docker images
                        dir
                    '''
                }
            }
        }

        stage('Image Scan with Trivy') {
            steps {
                script {
                    powershell '''
                        Write-Host "Starting Trivy scan on Docker images..."
                        if (-not (Test-Path "$env:TRIVY_REPORT_DIR")) {
                            New-Item -ItemType Directory -Path "$env:TRIVY_REPORT_DIR" | Out-Null
                        }
                        $images = @("marketplace_end:latest")
                        foreach ($image in $images) {
                            Write-Host "Checking if image exists: $image"
                            $imageExists = docker images --format "{{.Repository}}:{{.Tag}}" | Select-String -Pattern "^$image$"
                            if (-not $imageExists) {
                                Write-Host "Image $image does not exist. Skipping Trivy scan."
                                continue
                            }
                            Write-Host "Scanning image: $image"
                            C:\\Tools\\Trivy\\trivy.exe image `
                                --severity HIGH,CRITICAL `
                                --format sarif `
                                --output "$env:TRIVY_REPORT_DIR\\$($image.Replace(':', '_')).sarif" `
                                $image
                            if ($LASTEXITCODE -eq 1) {
                                Write-Host "[INFO] High/Critical vulnerabilities found in $image, but build will continue."
                            } elseif ($LASTEXITCODE -ne 0) {
                                Write-Error "[ERROR] Trivy failed to scan $image with exit code $LASTEXITCODE"
                            } else {
                                Write-Host "No HIGH/CRITICAL vulnerabilities found in $image"
                            }
                        }
                        Write-Host "Trivy image scanning completed."
                    '''
                }
            }
        }

        stage('Secret Scanning with Gitleaks') {
            steps {
                script {
                    powershell '''
                        Write-Host "Starting Gitleaks scan..."
                        if (-not (Test-Path "$env:GITLEAKS_REPORT_DIR")) {
                            New-Item -ItemType Directory -Path "$env:GITLEAKS_REPORT_DIR" | Out-Null
                        }
                        C:\\Tools\\Gitleaks\\gitleaks.exe detect `
                            --source ./src `
                            --report-format sarif `
                            --report-path "$env:GITLEAKS_REPORT_DIR\\gitleaks-report.sarif"
                        Write-Host "Gitleaks scan completed. Report saved at .\\gitleaks-reports\\gitleaks-report.sarif"
                    '''
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    powershell '''
                        Write-Host "Generating sonar-project.properties..."
                        $sonarProps = @"
sonar.projectKey=Marketplace_Backend_Dwinzo
sonar.projectName=Marketplace_Backend_Dwinzo
sonar.projectVersion=1.0.0
sonar.sources=./src
sonar.language=ts
sonar.typescript.lcov.reportPaths=coverage/lcov.info
"@
                        Set-Content -Path "sonar-project.properties" -Value $sonarProps
                        Write-Host "Running SonarScanner..."
                        sonar-scanner
                    '''
                }
            }
        }

        stage('Software Composition Analysis (SCA)') {
            steps {
                script {
                    powershell '''
                        Write-Host "Installing OWASP Dependency-Check..."
                        if (-not (Test-Path "$env:SCA_REPORT_DIR")) {
                            New-Item -ItemType Directory -Path "$env:SCA_REPORT_DIR" | Out-Null
                        }
                        if (-not (Test-Path ".\\dependency-check")) {
                            Write-Host "Downloading OWASP Dependency-Check..."
                            Invoke-WebRequest -Uri "https://github.com/jeremylong/DependencyCheck/releases/download/v8.2.1/dependency-check-8.2.1-release.zip"  -OutFile "dependency-check.zip"
                            Expand-Archive -Path "dependency-check.zip" -DestinationPath "." -Force
                            Remove-Item -Path "dependency-check.zip"
                        }
                        .\\dependency-check\\bin\\dependency-check.bat `
                            --project "Marketplace_Backend_Dwinzo_SCA" `
                            --scan "./src" `
                            --format "HTML" `
                            --out "$env:SCA_REPORT_DIR"
                        Write-Host "SCA report generated at .\\backend-sca-report\\dependency-check-report.html"
                    '''
                }
            }
        }
    }

    post {
    always {
        script {
            def buildStatus = currentBuild.result ?: 'SUCCESS'
            def statusColor = buildStatus == 'SUCCESS' ? '#22c55e' : buildStatus == 'FAILURE' ? '#ef4444' : '#f59e0b'
            def statusIcon = buildStatus == 'SUCCESS' ? '‚úÖ' : buildStatus == 'FAILURE' ? '‚ùå' : '‚ö†Ô∏è'
            def statusBg = buildStatus == 'SUCCESS' ? '#f0fdf4' : buildStatus == 'FAILURE' ? '#fef2f2' : '#fffbeb'
            def currentTime = new Date().format("yyyy-MM-dd HH:mm:ss")

            emailext(
                subject: "[${buildStatus}] üõí Dwinzo's Marketplace Backend Security Report #${env.BUILD_NUMBER} ${statusIcon}",
                body: """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Marketplace Security Report</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #1f2937; background-color: #f8fafc; margin: 0; padding: 20px 0; }
        table { border-collapse: collapse; width: 100%; }
        td, th { padding: 0; vertical-align: top; }
        .email-wrapper { width: 100%; max-width: 700px; margin: 0 auto; background-color: #ffffff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08); }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-align: center; padding: 50px 30px; }
        .brand-logo { font-size: 42px; font-weight: 800; margin-bottom: 10px; letter-spacing: -1px; }
        .brand-tagline { font-size: 16px; opacity: 0.9; margin-bottom: 25px; font-weight: 300; }
        .build-badge { background-color: rgba(255, 255, 255, 0.25); padding: 15px 25px; border-radius: 30px; font-size: 14px; font-weight: 600; display: inline-block; border: 1px solid rgba(255, 255, 255, 0.3); }
        .status-banner { background-color: ${statusBg}; text-align: center; padding: 35px 30px; border-bottom: 1px solid #e5e7eb; }
        .status-icon { font-size: 48px; margin-bottom: 15px; display: block; }
        .status-title { font-size: 24px; font-weight: 700; color: ${statusColor}; margin-bottom: 8px; }
        .status-subtitle { font-size: 16px; color: #6b7280; font-weight: 400; }
        .section-header { background-color: #f9fafb; padding: 25px 30px; border-bottom: 1px solid #e5e7eb; }
        .section-title { font-size: 20px; font-weight: 700; color: #111827; }
        .section-content { padding: 30px; }
        .stats-grid { width: 100%; margin: 20px 0; }
        .stats-grid td { width: 25%; padding: 10px; }
        .stat-item { background-color: #f8fafc; border: 2px solid #e2e8f0; border-radius: 12px; padding: 25px 20px; text-align: center; min-height: 100px; }
        .stat-value { font-size: 28px; font-weight: 800; color: #667eea; margin-bottom: 8px; display: block; }
        .stat-label { font-size: 12px; color: #64748b; text-transform: uppercase; font-weight: 600; letter-spacing: 0.5px; }
        .report-item { background-color: #ffffff; border: 1px solid #e5e7eb; border-radius: 10px; margin-bottom: 15px; padding: 25px; }
        .report-header { margin-bottom: 12px; }
        .report-title { font-size: 18px; font-weight: 600; color: #111827; margin: 0 0 8px 0; }
        .report-description { color: #6b7280; font-size: 14px; margin-bottom: 15px; line-height: 1.5; }
        .status-pill { background-color: #dcfce7; color: #166534; padding: 6px 14px; border-radius: 20px; font-size: 12px; font-weight: 600; display: inline-block; margin-right: 12px; }
        .status-pill.warning { background-color: #fef3c7; color: #92400e; }
        .status-pill.error { background-color: #fee2e2; color: #991b1b; }
        .btn-primary { background-color: #667eea; color: white; padding: 10px 20px; border-radius: 8px; text-decoration: none; font-size: 14px; font-weight: 600; display: inline-block; }
        .credentials-box { background-color: #fef3c7; border: 2px solid #f59e0b; border-radius: 10px; margin: 20px 0; }
        .credentials-header { background-color: #f59e0b; color: white; padding: 20px 25px; font-weight: 700; font-size: 16px; }
        .credentials-content { padding: 25px; }
        .credential-row { margin-bottom: 12px; }
        .credential-label { font-weight: 700; color: #92400e; display: inline-block; width: 80px; }
        .credential-value { background-color: white; padding: 8px 12px; border-radius: 6px; font-family: 'Courier New', Monaco, monospace; font-size: 13px; border: 1px solid #d1d5db; display: inline-block; margin-left: 10px; }
        .actions-section { background-color: #f8fafc; text-align: center; padding: 40px 30px; }
        .actions-title { font-size: 20px; font-weight: 700; color: #111827; margin-bottom: 25px; }
        .actions-grid { width: 100%; margin-bottom: 20px; }
        .actions-grid td { padding: 8px; text-align: center; width: 50%; }
        .btn-action { background-color: #667eea; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600; font-size: 14px; display: inline-block; width: 90%; max-width: 200px; }
        .btn-secondary { background-color: #6b7280; }
        .btn-success { background-color: #22c55e; }
        .btn-warning { background-color: #f59e0b; }
        .footer { background-color: #1f2937; color: white; text-align: center; padding: 40px 30px; }
        .footer-title { font-size: 18px; font-weight: 700; margin-bottom: 8px; }
        .footer-subtitle { margin-bottom: 15px; opacity: 0.8; }
        .footer-contact { margin-bottom: 25px; }
        .footer-contact a { color: #a78bfa; text-decoration: none; }
        .footer-note { font-size: 12px; color: #9ca3af; line-height: 1.6; max-width: 500px; margin: 0 auto; }
        .company-footer { background-color: #f9fafb; border-top: 1px solid #e5e7eb; padding: 20px; text-align: center; font-size: 12px; color: #6b7280; }
        .icon-badge { width: 24px; height: 24px; display: inline-block; margin-right: 8px; vertical-align: middle; }
        @media screen and (max-width: 600px) {
            .email-wrapper { margin: 0 10px; }
            .header { padding: 30px 20px; }
            .brand-logo { font-size: 32px; }
            .build-badge { font-size: 12px; padding: 12px 20px; }
            .status-banner { padding: 25px 20px; }
            .section-header { padding: 20px; }
            .section-content { padding: 20px; }
            .stats-grid td { width: 50%; padding: 8px; }
            .stat-item { padding: 20px 15px; }
            .stat-value { font-size: 22px; }
            .report-item { padding: 20px; }
            .actions-section { padding: 30px 20px; }
            .actions-grid td { width: 100%; padding: 6px 0; }
            .btn-action { width: 100%; max-width: none; }
            .footer { padding: 30px 20px; }
        }
    </style>
</head>
<body>
    <div class="email-wrapper">
        <!-- Header -->
        <div class="header">
            <div class="brand-logo">üõí MARKETPLACE</div>
            <div class="brand-tagline">E-Commerce Dwinzo Backend Security Platform</div>
            <div class="build-badge">
                Build #${env.BUILD_NUMBER} ‚Ä¢ ${buildStatus} ‚Ä¢ ${currentTime}
            </div>
        </div>

        <!-- Status Banner -->
        <div class="status-banner">
            <span class="status-icon">${statusIcon}</span>
            <div class="status-title">Security Scan ${buildStatus == 'SUCCESS' ? 'Completed Successfully' : 'Failed'}</div>
            <div class="status-subtitle">
                ${buildStatus == 'SUCCESS' ? 'All security checks passed' : 'Issues detected - please review'} ‚Ä¢ Completed at ${currentTime}
            </div>
        </div>

        <!-- Build Overview -->
        <div class="section-header">
            <div class="section-title">üìä Build Overview</div>
        </div>
        <div class="section-content">
            <table class="stats-grid">
                <tr>
                    <td>
                        <div class="stat-item">
                            <span class="stat-value">#${env.BUILD_NUMBER}</span>
                            <span class="stat-label">Build Number</span>
                        </div>
                    </td>
                    <td>
                        <div class="stat-item">
                            <span class="stat-value">main</span>
                            <span class="stat-label">Branch</span>
                        </div>
                    </td>
                    <td>
                        <div class="stat-item">
                            <span class="stat-value">4</span>
                            <span class="stat-label">Scans Completed</span>
                        </div>
                    </td>
                    <td>
                        <div class="stat-item">
                            <span class="stat-value">0</span>
                            <span class="stat-label">Issues Found</span>
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <!-- Security Reports -->
        <div class="section-header">
            <div class="section-title">üîç Security Analysis Reports</div>
        </div>
        <div class="section-content">
            <!-- Dependency Security -->
            <div class="report-item">
                <div class="report-header">
                    <div class="report-title">üîó Dependency Vulnerability Assessment</div>
                </div>
                <div class="report-description">
                    Comprehensive OWASP Dependency-Check analysis for known vulnerabilities in third-party libraries and components
                </div>
                <span class="status-pill">‚úì Clean</span>
                <a href="${env.BUILD_URL}artifact/backend-sca-report/dependency-check-report.html" class="btn-primary">View Detailed Report</a>
            </div>

            <!-- Secret Detection -->
            <div class="report-item">
                <div class="report-header">
                    <div class="report-title">üîê Credential & Secret Detection</div>
                </div>
                <div class="report-description">
                    GitLeaks powered scan for exposed API keys, passwords, tokens, and sensitive credentials in codebase
                </div>
                <span class="status-pill">‚úì No Secrets Detected</span>
            </div>

            <!-- Container Security -->
            <div class="report-item">
                <div class="report-header">
                    <div class="report-title">üê≥ Container Image Security Scan</div>
                </div>
                <div class="report-description">
                    Trivy security analysis of Docker images for OS vulnerabilities, misconfigurations, and security best practices
                </div>
                <span class="status-pill">‚úì Container Secure</span>
            </div>

            <!-- Code Quality -->
            <div class="report-item">
                <div class="report-header">
                    <div class="report-title">üìà Static Code Analysis (SonarQube)</div>
                </div>
                <div class="report-description">
                    Comprehensive code quality metrics, security hotspots, and maintainability analysis
                </div>
                <a href="http://185.100.212.76:12345/" class="btn-primary">Open SonarQube Dashboard</a>
            </div>
        </div>

        <!-- Dashboard Access -->
        <div class="section-header">
            <div class="section-title">üîë Development Dashboard Access</div>
        </div>
        <div class="section-content">
            <div class="credentials-box">
                <div class="credentials-header">
                    ‚ö†Ô∏è SonarQube & Grafana Development Credentials
                </div>
                <div class="credentials-content">
                    <div class="credential-row">
                        <span class="credential-label">Username:</span>
                        <span class="credential-value">admin</span>
                    </div>
                    <div class="credential-row">
                        <span class="credential-label">Password:</span>
                        <span class="credential-value">R@mkumar.p.1</span>
                    </div>
                    <p style="margin-top: 15px; font-size: 13px; color: #92400e; font-style: italic;">
                        * Development environment credentials - Use responsibly
                    </p>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="actions-section">
            <div class="actions-title">üöÄ Quick Access Dashboard</div>
            <table class="actions-grid">
                <tr>
                    <td><a href="http://185.100.212.76:8200/" class="btn-action">üåê Marketplace Application</a></td>
                    <td><a href="http://185.100.212.76:1234/" class="btn-action btn-secondary">ü§ñ Jenkins CI/CD</a></td>
                </tr>
                <tr>
                    <td><a href="${env.BUILD_URL}artifact/backend-sca-report/dependency-check-report.html" class="btn-action btn-success">üõ°Ô∏è Security Reports</a></td>
                    <td><a href="http://185.100.212.76:5678/" class="btn-action btn-warning">üìä Grafana Monitoring</a></td>
                </tr>
            </table>
        </div>

        <!-- Footer -->
        <div class="footer">
            <div class="footer-title">DevOps & Quality Assurance Team</div>
            <div class="footer-subtitle">Automated Security Integration Pipeline</div>
            <div class="footer-contact">
                Primary Contact: <a href="mailto:marikannan@hexrfactory.com">marikannan@hexrfactory.com</a>
            </div>
            <div class="footer-note">
                This automated security notification is generated by our Jenkins CI/CD pipeline.<br>
                Pipeline configured and maintained by Rithish Sam & Ramkumar P.<br>
                For technical support or pipeline issues, please contact the DevOps/QA Team.
            </div>
        </div>

        <!-- Company Footer -->
        <div class="company-footer">
            <strong>HEXR FACTORY IMMERSIVE TECH PRIVATE LIMITED</strong><br>
            Marketplace Security Platform ¬© ${new Date().getYear() + 1900} ‚Ä¢ All Rights Reserved
        </div>
    </div>
</body>
</html>
""",
                to: "ramkumar@hexrfactory.com, surya@hexrfactory.com",
                cc: "marikannan@hexrfactory.com",
                mimeType: 'text/html',
                replyTo: "marikannan@hexrfactory.com",
                from: '$SMTP_CREDENTIALS_USR',
                recipientProviders: [
                    [$class: 'DevelopersRecipientProvider'],
                    [$class: 'RequesterRecipientProvider']
                ],
                presendScript: '''
                    msg.setSubject(msg.getSubject().replaceAll("\\\\s+", " ").trim())
                ''',
                attachmentsPattern: "backend-sca-report/dependency-check-report.html, backend-gitleaks-reports/*.sarif, backend-gitleaks-reports/*.json, backend-trivy-reports/*.sarif"
            )

            // Archive artifacts and cleanup
            try {
                def summaryContent = """
Marketplace Backend Security Scan Summary
========================================
Build: #${env.BUILD_NUMBER}
Status: ${buildStatus}
Date: ${currentTime}
Branch: ${env.BRANCH_NAME ?: 'main'}

Platform Access:
- Marketplace App: http://185.100.212.76:8200/
- Jenkins Pipeline: ${env.BUILD_URL}
- SonarQube Analysis: http://185.100.212.76:12345/
- Grafana Monitoring: http://185.100.212.76:5678/

Security Reports Generated:
‚úì OWASP Dependency Check - Vulnerability Assessment
‚úì GitLeaks Scan - Secret & Credential Detection  
‚úì Trivy Container Scan - Docker Image Security
‚úì SonarQube Analysis - Code Quality & Security Hotspots

Pipeline Status: All security scans completed successfully
Next Scheduled Scan: Next commit trigger or manual execution
"""
                writeFile file: 'marketplace-security-summary.txt', text: summaryContent
                archiveArtifacts artifacts: 'marketplace-security-summary.txt', allowEmptyArchive: true, fingerprint: true
                archiveArtifacts artifacts: 'backend-sca-report/**', allowEmptyArchive: true
                archiveArtifacts artifacts: 'backend-gitleaks-reports/**', allowEmptyArchive: true
                archiveArtifacts artifacts: 'backend-trivy-reports/**', allowEmptyArchive: true

                publishHTML([
                    allowMissing: true,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'backend-sca-report',
                    reportFiles: 'dependency-check-report.html',
                    reportName: 'Marketplace Security Report'
                ])
            } catch (Exception e) {
                echo "Warning: Could not archive some artifacts: ${e.getMessage()}"
            }

            try {
                cleanWs()
            } catch (Exception e) {
                echo "Warning: Workspace cleanup had issues: ${e.getMessage()}"
            }
        }
    }

    success {
        powershell '''
            Write-Host "‚úÖ Marketplace Backend Security Pipeline - SUCCESS!"
            Write-Host "üèóÔ∏è  Build Number: $env:BUILD_NUMBER"
            Write-Host "üìÅ Workspace: $env:WORKSPACE"
            Write-Host "üîÑ Triggered by commit: $env:commit"
            Write-Host "üë§ Author: $env:author"
            Write-Host "üõí Marketplace security scans completed successfully"
        '''
    }

    failure {
        powershell '''
            Write-Host "‚ùå Marketplace Backend Security Pipeline - FAILED!"
            Write-Host "üîç Please check the security scan logs for details"
            Write-Host "üîÑ Triggered by commit: $env:commit"
            Write-Host "üë§ Author: $env:author"
            Write-Host "üõí Marketplace security verification incomplete"
        '''
    }
 }
}